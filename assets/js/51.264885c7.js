(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{341:function(t,a,e){"use strict";e.r(a);var n=e(7),s=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue-项目规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-项目规范"}},[t._v("#")]),t._v(" Vue 项目规范")]),t._v(" "),a("p",[t._v("vue 项目规范以 Vue 官方规范 （https://cn.vuejs.org/v2/style-guide/） 中的 A 规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。\n请仔仔细细阅读 Vue 官方规范，切记，此为第一步。")]),t._v(" "),a("h2",{attrs:{id:"组件规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件规范"}},[t._v("#")]),t._v(" 组件规范")]),t._v(" "),a("ol",[a("li",[t._v("组件名为多个单词。\n组件名应该始终是多个单词组成（大于等于 2），且命名规范为KebabCase格式。\n这样做可以避免跟现有的以及未来的 HTML 元素相冲突，因为所有的 HTML 元素名称都是单个单词的。\n正例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("export default {\n  name: 'TodoItem'\n  // ...\n};\n")])])]),a("p",[t._v("反例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("export default {\n  name: 'Todo',\n  // ...\n}\nexport default {\n  name: 'todo-item',\n  // ...\n}\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("组件文件名为 pascal-case 格式\n正例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("components/\n|- my-component.vue\n")])])]),a("p",[t._v("反例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("components/\n|- myComponent.vue\n|- MyComponent.vue\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("基础组件文件名为 base 开头，使用完整单词而不是缩写。\n正例：\ncomponents/\n|- base-button.vue\n|- base-table.vue\n|- base-icon.vue\n反例：\ncomponents/\n|- MyButton.vue\n|- VueTable.vue\n|- Icon.vue")])]),t._v(" "),a("li",[a("p",[t._v("和父组件紧密耦合的子组件应该以父组件名作为前缀命名\n正例：\ncomponents/\n|- todo-list.vue\n|- todo-list-item.vue\n|- todo-list-item-button.vue\n|- user-profile-options.vue （完整单词）\n反例：\ncomponents/\n|- TodoList.vue\n|- TodoItem.vue\n|- TodoButton.vue\n|- UProfOpts.vue （使用了缩写）")])]),t._v(" "),a("li",[a("p",[t._v("在 Template 模版中使用组件，应使用 PascalCase 模式，并且使用自闭合组件。")]),t._v(" "),a("p",[t._v("正例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 在单文件组件、字符串模板和 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSX")]),t._v(" 中 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MyComponent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Row"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("table "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("column"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Row"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("反例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("my"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("component "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("row"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("table "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("column"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("row"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Prop 定义应该尽量详细\n必须使用 camelCase 驼峰命名\n必须指定类型\n必须加上注释，表明其含义\n必须加上 required 或者 default，两者二选其一\n如果有业务需要，必须加上 validator 验证\n正例：")])])]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v(" props: {\n  // 组件状态，用于控制组件的颜色\n   status: {\n     type: String,\n     required: true,\n     validator: function (value) {\n       return [\n         'succ',\n         'info',\n         'error'\n       ].indexOf(value) !== -1\n     }\n   },\n    // 用户级别，用于显示皇冠个数\n   userLevel：{\n      type: String,\n      required: true\n   }\n}\n")])])]),a("ol",{attrs:{start:"7"}},[a("li",[t._v("为组件样式设置作用域\n正例：")])]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("btn btn-close"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("X"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 使用 `scoped` 特性 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scoped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".btn-close")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("反例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<template>\n  <button class="btn btn-close">X</button>\n</template>\n\x3c!-- 没有使用 `scoped` 特性 --\x3e\n<style>\n  .btn-close {\n    background-color: red;\n  }\n</style>\n')])])]),a("ol",{attrs:{start:"9"}},[a("li",[t._v("如果特性元素较多，应该主动换行。\n正例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<MyComponent foo="a" bar="b" baz="c"\n    foo="a" bar="b" baz="c"\n    foo="a" bar="b" baz="c"\n />\n')])])]),a("p",[t._v("反例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<MyComponent foo="a" bar="b" baz="c" foo="a" bar="b" baz="c" foo="a" bar="b" baz="c" foo="a" bar="b" baz="c"/>\n')])])]),a("h3",{attrs:{id:"模板中使用简单的表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板中使用简单的表达式"}},[t._v("#")]),t._v(" 模板中使用简单的表达式")]),t._v(" "),a("p",[t._v("组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。复杂表达式会让你的模板变得不那么声明式。我们应该尽量描述应该出现的是什么，而非如何计算那个值。而且计算属性和方法使得代码可以重用。\n正例：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ normalizedFullName }}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n// 复杂表达式已经移入一个计算属性\ncomputed: {\n  normalizedFullName: function () {\n    return this.fullName.split(' ').map(function (word) {\n      return word[0].toUpperCase() + word.slice(1)\n    }).join(' ')\n  }\n}\n")])])]),a("p",[t._v("反例：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       {{\n          fullName.split(' ').map(function (word) {\n             return word[0].toUpperCase() + word.slice(1)\n           }).join(' ')\n        }}\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"指令都使用缩写形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令都使用缩写形式"}},[t._v("#")]),t._v(" 指令都使用缩写形式")]),t._v(" "),a("p",[t._v("指令推荐都使用缩写形式，(用 : 表示 v-bind: 、用 @ 表示 v-on: 和用 # 表示 v-slot:)\n正例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input\n  @input="onInput"\n  @focus="onFocus"\n>\n')])])]),a("p",[t._v("反例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input\n  v-on:input="onInput"\n  @focus="onFocus"\n>\n')])])]),a("h3",{attrs:{id:"标签顺序保持一致"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标签顺序保持一致"}},[t._v("#")]),t._v(" 标签顺序保持一致")]),t._v(" "),a("p",[t._v("单文件组件应该总是让标签顺序保持为 `\n正例：\n"),[t._v("...")],t._v(" "),a("script",[t._v("...")])],2),a("style",[t._v("...")]),t._v("\n反例：\n"),[t._v("...")],t._v(" "),a("style",[t._v("...")]),t._v(" "),a("script",[t._v("...")]),a("p"),t._v(" "),a("h3",{attrs:{id:"必须为-v-for-设置键值-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#必须为-v-for-设置键值-key"}},[t._v("#")]),t._v(" 必须为 v-for 设置键值 key")]),t._v(" "),a("h3",{attrs:{id:"v-show-与-v-if-选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-show-与-v-if-选择"}},[t._v("#")]),t._v(" v-show 与 v-if 选择")]),t._v(" "),a("p",[t._v("如果运行时，需要非常频繁地切换，使用 v-show ；如果在运行时，条件很少改变，使用 v-if。")]),t._v(" "),a("h3",{attrs:{id:"script-标签内部结构顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-标签内部结构顺序"}},[t._v("#")]),t._v(" script 标签内部结构顺序")]),t._v(" "),a("p",[t._v("components > props > data > computed > watch > filter > 钩子函数（钩子函数按其执行顺序） > methods")]),t._v(" "),a("h3",{attrs:{id:"vue-router-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router-规范"}},[t._v("#")]),t._v(" Vue Router 规范")]),t._v(" "),a("ol",[a("li",[t._v("页面跳转数据传递使用路由参数\n页面跳转，例如 A 页面跳转到 B 页面，需要将 A 页面的数据传递到 B 页面，推荐使用 路由参数进行传参，而不是将需要传递的数据保存 vuex，然后在 B 页面取出 vuex 的数据，因为如果在 B 页面刷新会导致 vuex 数据丢失，导致 B 页面无法正常显示数据。\n正例：\nlet id = ' 123';\nthis.$router.push({ name: 'userCenter', query: { id: id } });")]),t._v(" "),a("li",[t._v("使用路由懒加载（延迟加载）机制\n{\npath: '/uploadAttachment',\nname: 'uploadAttachment',\nmeta: {\ntitle: '上传附件'\n},\ncomponent: () => import('@/view/components/uploadAttachment/index.vue')\n},")]),t._v(" "),a("li",[t._v("router 中的命名规范\npath、childrenPoints 命名规范采用kebab-case命名规范（尽量vue文件的目录结构保持一致，因为目录、文件名都是kebab-case，这样很方便找到对应的文件）\nname 命名规范采用KebabCase命名规范且和component组件名保持一致！（因为要保持keep-alive特性，keep-alive按照component的name进行缓存，所以两者必须高度保持一致）\n// 动态加载\nexport const reload = [\n{\npath: '/reload',\nname: 'reload',\ncomponent: Main,\nmeta: {\ntitle: '动态加载',\nicon: 'icon iconfont'\n},\nchildren: [\n{\npath: '/reload/smart-reload-list',\nname: 'SmartReloadList',\nmeta: {\ntitle: 'SmartReload',\nchildrenPoints: [\n{\ntitle: '查询',\nname: 'smart-reload-search'\n},\n{\ntitle: '执行reload',\nname: 'smart-reload-update'\n},\n{\ntitle: '查看执行结果',\nname: 'smart-reload-result'\n}\n]\n},\ncomponent: () =>\nimport('@/views/reload/smart-reload/smart-reload-list.vue')\n}\n]\n}\n];")]),t._v(" "),a("li",[t._v("router 中的 path 命名规范\npath除了采用kebab-case命名规范以外，必须以 / 开头，即使是children里的path也要以 / 开头。如下示例\n目的：\n经常有这样的场景：某个页面有问题，要立刻找到这个vue文件，如果不用以/开头，path为parent和children组成的，可能经常需要在router文件里搜索多次才能找到，而如果以/开头，则能立刻搜索到对应的组件")])]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("{\n    path: '/file',\n    name: 'File',\n    component: Main,\n    meta: {\n      title: '文件服务',\n      icon: 'ios-cloud-upload'\n    },\n    children: [\n      {\n        path: '/file/file-list',\n        name: 'FileList',\n        component: () => import('@/views/file/file-list.vue')\n      },\n      {\n        path: '/file/file-add',\n        name: 'FileAdd',\n        component: () => import('@/views/file/file-add.vue')\n      },\n      {\n        path: '/file/file-update',\n        name: 'FileUpdate',\n        component: () => import('@/views/file/file-update.vue')\n      }\n    ]\n  }\n")])])]),a("h2",{attrs:{id:"vue-项目目录规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-项目目录规范"}},[t._v("#")]),t._v(" Vue 项目目录规范")]),t._v(" "),a("p",[t._v("2.2.1 基础\nvue 项目中的所有命名一定要与后端命名统一。\n比如权限：后端 privilege, 前端无论 router , store, api 等都必须使用 privielege 单词！\n2.2.2 使用 Vue-cli 脚手架\n使用 vue-cli3 来初始化项目，项目名按照上面的命名规范。\n2.2.3 目录说明\n目录名按照上面的命名规范，其中 components 组件用大写驼峰，其余除 components 组件目录外的所有目录均使用 kebab-case 命名。\nsrc                                  源码目录\n|-- api                              所有api接口\n|-- assets                           静态资源，images, icons, styles等\n|-- components                       公用组件\n|-- config                           配置信息\n|-- constants                        常量信息，项目所有Enum, 全局常量等\n|-- directives                       自定义指令\n|-- filters                          过滤器，全局工具\n|-- datas                            模拟数据，临时存放\n|-- lib                              外部引用的插件存放及修改文件\n|-- mock                             模拟接口，临时存放\n|-- plugins                          插件，全局使用\n|-- router                           路由，统一管理\n|-- store                            vuex, 统一管理\n|-- themes                           自定义样式主题\n|-- views                            视图目录\n|   |-- role                                 role模块名\n|   |-- |-- role-list.vue                    role列表页面\n|   |-- |-- role-add.vue                     role新建页面\n|   |-- |-- role-update.vue                  role更新页面\n|   |-- |-- index.less                       role模块样式\n|   |-- |-- components                       role模块通用组件文件夹\n|   |-- employee                             employee模块")]),t._v(" "),a("ol",[a("li",[t._v("api 目录\n文件、变量命名要与后端保持一致。\n此目录对应后端 API 接口，按照后端一个 controller 一个 api js 文件。若项目较大时，可以按照业务划分子目录，并与后端保持一致。\napi 中的方法名字要与后端 api url 尽量保持语义高度一致性。\n对于 api 中的每个方法要添加注释，注释与后端 swagger 文档保持一致。\n正例：\n后端 url： EmployeeController.java\n/employee/add\n/employee/delete/{id}\n/employee/update\n前端： employee.js\n// 添加员工\naddEmployee: (data) => {\nreturn postAxios('/employee/add', data)\n},\n// 更新员工信息\nupdateEmployee: (data) => {\nreturn postAxios('/employee/update', data)\n},\n// 删除员工\ndeleteEmployee: (employeeId) => {\nreturn postAxios('/employee/delete/' + employeeId)\n},")]),t._v(" "),a("li",[t._v("assets 目录\nassets 为静态资源，里面存放 images, styles, icons 等静态资源，静态资源命名格式为 kebab-case\n|assets\n|-- icons\n|-- images\n|   |-- background-color.png\n|   |-- upload-header.png\n|-- styles")]),t._v(" "),a("li",[t._v("components 目录\n此目录应按照组件进行目录划分，目录命名为 KebabCase，组件命名规则也为 KebabCase\n|components\n|-- error-log\n|   |-- index.vue\n|   |-- index.less\n|-- markdown-editor\n|   |-- index.vue\n|   |-- index.js\n|-- kebab-case")]),t._v(" "),a("li",[t._v("constants 目录\n此目录存放项目所有常量，如果常量在 vue 中使用，请使用 vue-enum 插件(https://www.npmjs.com/package/vue-enum)\n目录结构：\n|constants\n|-- index.js\n|-- role.js\n|-- employee.js\n例子： employee.js\nexport const EMPLOYEE_STATUS = {\nNORMAL: {\nvalue: 1,\ndesc: '正常'\n},\nDISABLED: {\nvalue: 1,\ndesc: '禁用'\n},\nDELETED: {\nvalue: 2,\ndesc: '已删除'\n}\n};\nexport const EMPLOYEE_ACCOUNT_TYPE = {\nQQ: {\nvalue: 1,\ndesc: 'QQ登录'\n},\nWECHAT: {\nvalue: 2,\ndesc: '微信登录'\n},\nDINGDING: {\nvalue: 3,\ndesc: '钉钉登录'\n},\nUSERNAME: {\nvalue: 4,\ndesc: '用户名密码登录'\n}\n};\nexport default {\nEMPLOYEE_STATUS,\nEMPLOYEE_ACCOUNT_TYPE\n};")]),t._v(" "),a("li",[t._v("router 与 store 目录\n这两个目录一定要将业务进行拆分，不能放到一个 js 文件里。\nrouter 尽量按照 views 中的结构保持一致\nstore 按照业务进行拆分不同的 js 文件")]),t._v(" "),a("li",[t._v("views 目录\n命名要与后端、router、api 等保持一致\ncomponents 中组件要使用 PascalCase 规则\n|-- views                                    视图目录\n|   |-- role                                 role模块名\n|   |   |-- role-list.vue                    role列表页面\n|   |   |-- role-add.vue                     role新建页面\n|   |   |-- role-update.vue                  role更新页面\n|   |   |-- index.less                      role模块样式\n|   |   |-- components                      role模块通用组件文件夹\n|   |   |   |-- role-header.vue             role头部组件\n|   |   |   |-- role-modal.vue              role弹出框组件\n|   |-- employee                            employee模块\n|   |-- behavior-log                        行为日志log模块\n|   |-- code-generator                      代码生成器模块\n2.2.4 注释说明\n整理必须加注释的地方\n公共组件使用说明\napi 目录的接口 js 文件必须加注释\nstore 中的 state, mutation, action 等必须加注释\nvue 文件中的 template 必须加注释，若文件较大添加 start end 注释\nvue 文件的 methods，每个 method 必须添加注释\nvue 文件的 data, 非常见单词要加注释\n2.2.5 其他")]),t._v(" "),a("li",[t._v("尽量不要手动操作 DOM\n因使用 vue 框架，所以在项目开发中尽量使用 vue 的数据驱动更新 DOM，尽量（不到万不得已）不要手动操作 DOM，包括：增删改 dom 元素、以及更改样式、添加事件等。")]),t._v(" "),a("li",[t._v("删除无用代码\n因使用了 git/svn 等代码版本工具，对于无用代码必须及时删除，例如：一些调试的 console 语句、无用的弃用功能代码。")])])],2)}),[],!1,null,null,null);a.default=s.exports}}]);